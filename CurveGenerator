<html>
<head>
<script type="text/javascript">
	var c;// Canvas context
	var H,W;
		function main(){
			var d=document.getElementById("canvas");
			H=d.height;
			W=d.width;
			c=d.getContext("2d");// defining canvas parameters
		 	//c.clearRect(0,0,W,H);
		 	c.strokeStyle="red";
		 	c.strokeRect(1,1,W-1,H-1);
		 	
		 	
for(var t=0;t<6;t+=0.1){
	var x=W/2+50*Math.cos(t),y=H/2+50*Math.sin(t);curvGen(x,y);
	c.arc(x,y,4, 0,2*Math.PI,true);	//c.fill();
	
	}

c.strokeStyle='black';
curvGen(100,100);

//for(var t=0;t<9;t++){	parseInt(document.write(direction()*180/Math.PI)+ " ");	}


}//end main

function curvGen(x=W/2,y=H/2){
	var i,N=500,
	//x=W/2,y=H/2,  			// curve`s start position
	x0,y0,phi; 
	
	// pfopen (); /*file open*/  //pmove(x,y);//write to file initial point
	c.beginPath();
	c.moveTo(x,y);
	
	for(i=1;i<=N;i++){
		x0=x;y0=y;         //x0, y0 - previous coordinates saving
		phi=direction();   // generating new direction angle to move
		x=x0+Math.cos(phi); //generating new coordinates based on direction
		y=y0+Math.sin(phi);
		
		c.lineTo(x,y);
		//pdraw(x,y);       //write to file this coordinates
		
	}
		
	c.stroke();//draw curve
//	c.strokeStyle='black';c.beginPath();c.arc(x,y,4, 0,2*Math.PI,true);c.fill();
	//pfclose();               //file close
}//End function curvGen

function direction(){  // generating new direction angle with limitation
	//"static" variables initialised in the first call only
	direction.phi;    //current direction
	direction.alpha;  //rotation angle
	if(direction.phi==undefined){direction.phi=0;}
	if(direction.alpha==undefined){direction.alpha=0;}
	direction.alpha+=parseInt((Math.random()*100)%13-6);// +=-6..+6
	//alert(direction.alpha);  //  document.write("a " + alpha);
    if(Math.abs(direction.alpha)>15) direction.alpha=0;//rotation ange limitation
    direction.phi+=direction.alpha;   //new direction
	return parseFloat(direction.phi*Math.PI/180); //return in RADs
}//End function direction

function struct(){
	this.xx;
	this.yy;
	this.ii;
	return this;
}

function pmove(x,y){ // writing to file move point
	var s=new struct;
	s.xx=x; s.yy=y; s.ii=0; //0=pen up
	//fwrite(&s,sizeof s,1,fp);
}//End function pmove()

function pdraw(x,y){ // writing to file draw point
	var s=new struct;
	s.xx=x; s.yy=y; s.ii=1; //1=pen down
	//fwrite(&s,sizeof s,1,fp);
}//End function pmove()

// var s=new struct;
//struct.x=1;

</script>
</head>
<body onload="main()">
<div id="here"> <div>
<canvas id="canvas" width="800" height="600">
	Ваш браузер не поддерживает канвас
</canvas>	
</body>
</html>
